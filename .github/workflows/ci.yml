name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt

      - name: Install dependencies (pinned)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .
          # If you didn't include this in dev group, keep this line:
          # pip install types-babel

      - name: Ruff lint
        run: ruff check .

      - name: Ruff format (check only)
        run: ruff format --check .

      - name: MyPy type-check
        run: |
          if [ -f "mypy.ini" ]; then
            mypy --config-file=mypy.ini src tests
          else
            mypy src tests
          fi

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt

      - name: Install dependencies (pinned)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run tests (pytest + coverage)
        run: |
          pytest
          # Save coverage file to aggregate later
          if [ -f ".coverage" ]; then mv .coverage ".coverage.${{ matrix.python-version }}"; fi

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: |
            .coverage.${{ matrix.python-version }}
            coverage.xml
            htmlcov
          if-no-files-found: warn
          retention-days: 7

  coverage:
    name: Combine coverage
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: cov-artifacts

      - name: Combine & report
        run: |
          python -m pip install --upgrade pip
          pip install "coverage[toml]>=7.5"
          find cov-artifacts -name ".coverage.*" -exec cp {} . \;
          coverage combine
          coverage report -m          # honors fail_under in pyproject
          coverage html
          coverage xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
